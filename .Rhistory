xlab("Year") +
ylab(expression("Total PM"[2.5]*" Emissions")) +
ggtitle('Total Emissions in Baltimore City, Maryland from 1999 to 2008')
print(g)
as.data.frame(bcityTotalaggregated)
bcityTotalaggregated<-as.data.frame(bcityTotalaggregated)
bcityTotalAggregated<-as.data.frame(bcityTotalAggregated)
# Subset the data for only the Baltimore City, Maryland
bcity  <- subset(nei, fips=="24510")
bcityTotalAggregated <- tapply(bcity$Emissions,list(bcity$year, bcity$type), sum)
bcityTotalAggregated <- as.data.frame(bcityTotalAggregated)
# Aggregate the subset data according to year and type and calculate their total sum
#bcityTotalaggregated <- tapply(Emissions ~ year + type, bcity, sum)
g <- ggplot(bcityTotalAggregated, aes(year, Emissions, color = type))
g <- g + geom_line(lwd = 1) +
xlab("Year") +
ylab(expression("Total PM"[2.5]*" Emissions")) +
ggtitle('Total Emissions in Baltimore City, Maryland from 1999 to 2008')
print(g)
# Subset the data for only the Baltimore City, Maryland
bcity  <- subset(nei, fips=="24510")
bcityTotalAggregated <- tapply(bcity$Emissions,list(bcity$year, bcity$type), sum)
bcityTotalAggregated <- as.data.frame(bcityTotalAggregated)
# Aggregate the subset data according to year and type and calculate their total sum
#bcityTotalaggregated <- tapply(Emissions ~ year + type, bcity, sum)
g <- ggplot(bcityTotalAggregated, aes(year, Emissions, color = type))
g <- g + geom_line(lwd = 1) +# Subset the data for only the Baltimore City, Maryland
bcity  <- subset(nei, fips=="24510")
# Aggregate the subset data according to year and type and calculate their total sum
bcityTotalAggregated <- aggregate(Emissions ~ year + type, bcity, sum)
g <- ggplot(bcityTotalAggregated, aes(year, Emissions, color = type))
g <- g + geom_line(lwd = 1) +
xlab("Year") +
ylab(expression("Total PM"[2.5]*" Emissions")) +
ggtitle('Total Emissions in Baltimore City, Maryland from 1999 to 2008')
print(g)
xlab("Year") +
ylab(expression("Total PM"[2.5]*" Emissions")) +
ggtitle('Total Emissions in Baltimore City, Maryland from 1999 to 2008')
print(g)
# Subset the data for only the Baltimore City, Maryland
bcity  <- subset(nei, fips=="24510")
# Aggregate the subset data according to year and type and calculate their total sum
bcityTotalAggregated <- aggregate(Emissions ~ year + type, bcity, sum)
g <- ggplot(bcityTotalAggregated, aes(year, Emissions, color = type))
g <- g + geom_line(lwd = 1) +
xlab("Year") +
ylab(expression("Total PM"[2.5]*" Emissions")) +
ggtitle('Total Emissions in Baltimore City, Maryland from 1999 to 2008')
print(g)
# Load the required packages
library(ggplot2)
# Read the data from the working directory
nei <- readRDS("summarySCC_PM25.rds")
scc <- readRDS("Source_Classification_Code.rds")
# Open a new graphics device in png
png(filename = "plot2.png", width = 480, height = 480, units = "px")
# Subset the data for only the Baltimore City, Maryland
bcity  <- subset(nei, fips=="24510")
# Aggregate the subset data according to year and type and calculate their total sum
bcityTotalAggregated <- aggregate(Emissions ~ year + type, bcity, sum)
g <- ggplot(bcityTotalAggregated, aes(year, Emissions, color = type))
g <- g + geom_line(lwd = 1) +
xlab("Year") +
ylab(expression("Total PM"[2.5]*" Emissions")) +
ggtitle('Total Emissions in Baltimore City, Maryland from 1999 to 2008')
print(g)
# Close the graphic device
dev.off()
# Open a new graphics device in png
png(filename = "plot3.png", width = 480, height = 480, units = "px")
# Subset the data for only the Baltimore City, Maryland
bcity  <- subset(nei, fips=="24510")
# Aggregate the subset data according to year and type and calculate their total sum
bcityTotalAggregated <- aggregate(Emissions ~ year + type, bcity, sum)
g <- ggplot(bcityTotalAggregated, aes(year, Emissions, color = type))
g <- g + geom_line(lwd = 1) +
xlab("Year") +
ylab(expression("Total PM"[2.5]*" Emissions")) +
ggtitle('Total Emissions in Baltimore City, Maryland from 1999 to 2008')
print(g)
# Close the graphic device
dev.off()
# Open a new graphics device in png
png(filename = "plot1.png", width = 480, height = 480, units = "px")
# Plot the required graph
with(nei, plot(unique(year),  tapply(Emissions, year, sum),
type = "l", lwd = 2,
xlab = "Year", ylab = expression("Total PM"[2.5]*" Emissions"),
main = "Total PM2.5 emission for each year"))
# Close the graphic device
dev.off()
# Open a new graphics device in png
png(filename = "plot2.png", width = 480, height = 480, units = "px")
# Subset the data for only the Baltimore City, Maryland
bcity <- subset(nei, fips == "24510")
# Plot the required graph
with(bcity, plot(unique(year),  tapply(Emissions, year, sum),
type = "l", lwd = 2,
xlab = "Year", ylab = expression("Total PM"[2.5]*" Emissions"),
main = "Total PM2.5 emission for each year in Baltimore City, Maryland"))
# Close the graphic device
dev.off()
# Open a new graphics device in png
png(filename = "plot2.png", width = 480, height = 480, units = "px")
# Subset the data for only the Baltimore City, Maryland
bcity <- subset(nei, fips == "24510")
# Plot the required graph
with(bcity, plot(unique(year),  tapply(Emissions, year, sum),
type = "l", lwd = 2,
xlab = "Year", ylab = expression("Total PM"[2.5]*" Emissions"),
main = "Total Emissions in Baltimore City, Maryland from 1999 to 2008"))
# Close the graphic device
dev.off()
# Open a new graphics device in png
png(filename = "plot3.png", width = 480, height = 480, units = "px")
# Subset the data for only the Baltimore City, Maryland
bcity  <- subset(nei, fips=="24510")
# Aggregate the subset data according to year and type and calculate their total sum
bcityTotalAggregated <- aggregate(Emissions ~ year + type, bcity, sum)
g <- ggplot(bcityTotalAggregated, aes(year, Emissions, color = type))
g <- g + geom_line(lwd = 1) +
xlab("Year") +
ylab(expression("Total PM"[2.5]*" Emissions")) +
ggtitle('Total Emissions in Baltimore City, Maryland from 1999 to 2008')
print(g)
# Close the graphic device
dev.off()
# Read the data from the working directory
nei <- readRDS("summarySCC_PM25.rds")
scc <- readRDS("Source_Classification_Code.rds")
# Open a new graphics device in png
png(filename = "plot1.png", width = 480, height = 480, units = "px")
# Plot the required graph
with(nei, plot(unique(year),  tapply(Emissions, year, sum),
type = "l", lwd = 2,
xlab = "Year", ylab = expression("Total PM"[2.5]*" Emissions"),
main = "Total Emissions for each year"))
# Close the graphic device
dev.off()
# Open a new graphics device in png
png(filename = "plot1.png", width = 480, height = 480, units = "px")
# Plot the required graph
with(nei, plot(unique(year),  tapply(Emissions, year, sum),
type = "l", lwd = 2,
xlab = "Year", ylab = expression("Total PM"[2.5]*" Emissions"),
main = "Total Emissions from 1998 to 2008"))
# Close the graphic device
dev.off()
head(scc)
summary(scc)
# Read the data from the working directory
nei <- readRDS("summarySCC_PM25.rds")
scc <- readRDS("Source_Classification_Code.rds")
# Merge the two datasets
neiscc <- merge(nei, scc, by = "SCC")
neiscc <- transform(neiscc, year = factor(year))
# Fetch all NEIxSCC records with Short.Name (SCC) = Coal
coal  <- grepl("coal", neiscc$Short.Name, ignore.case=TRUE)
neiSccCoal <- neiscc[coal, ]
aggregatedTotalByYear <- aggregate(Emissions ~ year, neiSccCoal, sum)
# Open a new graphics device in png
#png("plot4.png", width=480, height=480)
# Plot the required graph
g <- ggplot(aggregatedTotalByYear, aes(factor(year), Emissions))
g <- g + geom_bar() +
xlab("year") +
ylab(expression('Total PM'[2.5]*" Emissions")) +
ggtitle('Total Emissions from coal sources from 1999 to 2008')
print(g)
neiscc <- transform(neiscc, year = factor(year))
# Fetch all NEIxSCC records with Short.Name (SCC) = Coal
coal  <- grepl("coal", neiscc$Short.Name, ignore.case=TRUE)
neiSccCoal <- neiscc[coal, ]
aggregatedTotalByYear <- aggregate(Emissions ~ year, neiSccCoal, sum)
# Open a new graphics device in png
png("plot4.png", width=640, height=480)
# Plot the required graph
g <- ggplot(aggregatedTotalByYear, aes(factor(year), Emissions))
g <- g + geom_bar(stat="identity") +
xlab("year") +
ylab(expression('Total PM'[2.5]*" Emissions")) +
ggtitle('Total Emissions from coal sources from 1999 to 2008')
print(g)
dev.off()
# Plot the required graph
g <- ggplot(aggregatedTotalByYear, aes(factor(year), Emissions))
g <- g + geom_bar(stat="identity") +
xlab("year") +
ylab(expression('Total PM'[2.5]*" Emissions")) +
ggtitle('Total Emissions from coal sources from 1999 to 2008')
print(g)
summary(scc)
# Gather the subset of the NEI data which corresponds to vehicles
vehicles <- grepl("vehicle", neiscc$SCC.Level.Two, ignore.case=TRUE)
vehicles <- grepl("vehicle", neiscc$SCC.Level.Two, ignore.case=TRUE)
vehiclesNEI <- neiscc[vehicles,]
# Gather the subset of the NEI data which corresponds to vehicles
vehicles <- grepl("vehicle", neiscc$SCC.Level.Two, ignore.case=TRUE)
vehiclesNEI <- neiscc[vehicles,]
# Subset the vehicles NEI data to Baltimore's fip
baltimoreVehiclesNEI <- vehiclesNEI[vehiclesNEI$fips=="24510",]
aggregatedTotalByYear <- aggregate(Emissions ~ year, baltimoreVehiclesNEI, sum)
# Open a new graphics device in png
#png("plot5.png",width=480,height=480,units="px",bg="transparent")
# Plot the required graph
g <- ggplot(aggregatedTotalByYear,aes(year,Emissions))
g <- g + geom_bar(stat="identity") +
theme_bw() +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (10^5 Tons)")) +
labs(title=expression("PM"[2.5]*" Motor Vehicle Source Emissions in Baltimore from 1999-2008"))
print(g)
# Subset the vehicles NEI data to Baltimore's fip
baltimoreVehiclesNEI <- vehiclesNEI[vehiclesNEI$fips=="24510",]
aggregatedTotalByYear <- aggregate(Emissions ~ year, baltimoreVehiclesNEI, sum)
# Open a new graphics device in png
#png("plot5.png",width=480,height=480,units="px",bg="transparent")
# Plot the required graph
g <- ggplot(aggregatedTotalByYear,aes(year,Emissions))
g <- g + geom_bar(stat="identity", width = 2.5) +
theme_bw() +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (10^5 Tons)")) +
labs(title=expression("PM"[2.5]*" Motor Vehicle Source Emissions in Baltimore from 1999-2008"))
print(g)
# Subset the vehicles NEI data to Baltimore's fip
baltimoreVehiclesNEI <- vehiclesNEI[vehiclesNEI$fips=="24510",]
aggregatedTotalByYear <- aggregate(Emissions ~ year, baltimoreVehiclesNEI, sum)
# Open a new graphics device in png
#png("plot5.png",width=480,height=480,units="px",bg="transparent")
# Plot the required graph
g <- ggplot(aggregatedTotalByYear,aes(year,Emissions))
g <- g + geom_bar(stat="identity", width = .5) +
theme_bw() +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (10^5 Tons)")) +
labs(title=expression("PM"[2.5]*" Motor Vehicle Source Emissions in Baltimore from 1999-2008"))
print(g)
# Gather the subset of the NEI data which corresponds to vehicles
vehicles <- grepl("vehicle", neiscc$SCC.Level.Two, ignore.case=TRUE)
vehiclesNEI <- neiscc[vehicles,]
# Subset the vehicles NEI data to Baltimore's fip
baltimoreVehiclesNEI <- vehiclesNEI[vehiclesNEI$fips=="24510",]
aggregatedTotalByYear <- aggregate(Emissions ~ year, baltimoreVehiclesNEI, sum)
# Open a new graphics device in png
png("plot5.png",width=480,height=480,units="px")
# Plot the required graph
g <- ggplot(aggregatedTotalByYear,aes(year,Emissions))
g <- g + geom_bar(stat="identity", width = 0.5) +
theme_bw() +
labs(x="year", y=expression("Total PM"[2.5]*" Emission")) +
labs(title=expression("PM"[2.5]*" Motor Vehicle Source Emissions in Baltimore from 1999-2008"))
print(g)
dev.off()
# Subset the vehicles NEI data to Baltimore's fip
baltimoreVehiclesNEI <- vehiclesNEI[vehiclesNEI$fips=="24510",]
aggregatedTotalByYear <- aggregate(Emissions ~ year, baltimoreVehiclesNEI, sum)
# Open a new graphics device in png
png("plot5.png",width=480,height=480,units="px")
# Plot the required graph
g <- ggplot(aggregatedTotalByYear,aes(year,Emissions))
g <- g + geom_bar(stat="identity", width = 0.5) +
theme_bw() +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission")) +
labs(title=expression("PM"[2.5]*" Motor Vehicle Source Emissions in Baltimore from 1999-2008"))
print(g)
dev.off()
# Gather the subset of the NEI data which corresponds to vehicles
vehicles <- grepl("vehicle", neiscc$SCC.Level.Two, ignore.case=TRUE)
vehiclesNEI <- neiscc[vehicles,]
# Subset the vehicles NEI data to Baltimore's fip
baltimoreVehiclesNEI <- vehiclesNEI[vehiclesNEI$fips=="24510",]
aggregatedTotalByYear <- aggregate(Emissions ~ year, baltimoreVehiclesNEI, sum)
# Open a new graphics device in png
png("plot5.png",width=640,height=480,units="px")
# Plot the required graph
g <- ggplot(aggregatedTotalByYear,aes(year,Emissions))
g <- g + geom_bar(stat="identity", width = 0.5) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission")) +
labs(title = "Motor Vehicle Source Emissions in Baltimore from 1999-2008")
print(g)
dev.off()
# Gather the subset of the NEI data which corresponds to vehicles
vehicles <- grepl("vehicle", neiscc$SCC.Level.Two, ignore.case=TRUE)
vehiclesNEI <- neiscc[vehicles,]
# Subset the vehicles NEI data to Baltimore's fip
baltimoreVehiclesNEI <- vehiclesNEI[vehiclesNEI$fips=="24510",]
baltimoreVehiclesNEI$city <- "Baltimore City"
LAvehiclesNEI <- vehiclesNEI[vehiclesNEI$fips=="06037",]
LAvehiclesNEI$city <- "Los Angeles County"
# Combine the two subsets with city name into one data frame
bothNEI <- rbind(baltimoreVehiclesNEI,LAvehiclesNEI)
aggregatedTotalByYear <- aggregate(Emissions ~ year, bothNEI, sum)
# Open a new graphics device in png
png("plot6.png",width=640,height=480,units="px")
# Plot the required graph
g <- ggplot(aggregatedTotalByYear, aes(x=factor(year), y=Emissions, fill=city)) +
geom_bar(stat="identity") +
facet_grid(.~city) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (Kilo-Tons)")) +
labs(title=expression("Motor Vehicle Source Emissions in Baltimore & LA, 1999-2008"))
print(g)
dev.off()
# Subset the vehicles NEI data to Baltimore's fip
baltimoreVehiclesNEI <- vehiclesNEI[vehiclesNEI$fips=="24510",]
baltimoreVehiclesNEI$city <- "Baltimore City"
LAvehiclesNEI <- vehiclesNEI[vehiclesNEI$fips=="06037",]
LAvehiclesNEI$city <- "Los Angeles County"
# Combine the two subsets with city name into one data frame
bothNEI <- rbind(baltimoreVehiclesNEI,LAvehiclesNEI)
aggregatedTotalByYear <- aggregate(Emissions ~ year, bothNEI, sum)
# Open a new graphics device in png
png("plot6.png",width=640,height=480,units="px")
# Plot the required graph
g <- ggplot(aggregatedTotalByYear, aes(x=factor(year), y=Emissions, fill=city)) +
geom_bar(aes(fill=year),stat="identity") +
facet_grid(scales="free", space="free", .~city) +
guides(fill=FALSE) + theme_bw() +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (Kilo-Tons)")) +
labs(title=expression("PM"[2.5]*" Motor Vehicle Source Emissions in Baltimore & LA, 1999-2008"))
print(g)
dev.off()
# Subset the vehicles NEI data to Baltimore's fip
baltimoreVehiclesNEI <- vehiclesNEI[vehiclesNEI$fips=="24510",]
baltimoreVehiclesNEI$city <- "Baltimore City"
LAvehiclesNEI <- vehiclesNEI[vehiclesNEI$fips=="06037",]
LAvehiclesNEI$city <- "Los Angeles County"
# Combine the two subsets with city name into one data frame
bothNEI <- rbind(baltimoreVehiclesNEI,LAvehiclesNEI)
# Open a new graphics device in png
png("plot6.png",width=640,height=480,units="px")
# Plot the required graph
g <- ggplot(bothNEI, aes(x=factor(year), y=Emissions, fill=city)) +
geom_bar(aes(fill=year),stat="identity") +
facet_grid(scales="free", space="free", .~city) +
guides(fill=FALSE) + theme_bw() +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (Kilo-Tons)")) +
labs(title=expression("PM"[2.5]*" Motor Vehicle Source Emissions in Baltimore & LA, 1999-2008"))
print(g)
dev.off()
# Subset the vehicles NEI data to Baltimore's fip
baltimoreVehiclesNEI <- vehiclesNEI[vehiclesNEI$fips=="24510",]
baltimoreVehiclesNEI$city <- "Baltimore City"
LAvehiclesNEI <- vehiclesNEI[vehiclesNEI$fips=="06037",]
LAvehiclesNEI$city <- "Los Angeles County"
# Combine the two subsets with city name into one data frame
bothNEI <- rbind(baltimoreVehiclesNEI,LAvehiclesNEI)
# Open a new graphics device in png
png("plot6.png",width=640,height=480,units="px")
# Plot the required graph
g <- ggplot(bothNEI, aes(x=factor(year), y=Emissions, fill=city)) +
geom_bar(aes(fill=year),stat="identity") +
facet_grid(.~city) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (Kilo-Tons)")) +
labs(title=expression("PM"[2.5]*" Motor Vehicle Source Emissions in Baltimore & LA, 1999-2008"))
print(g)
dev.off()
# Subset the vehicles NEI data to Baltimore's fip
baltimoreVehiclesNEI <- vehiclesNEI[vehiclesNEI$fips=="24510",]
baltimoreVehiclesNEI$city <- "Baltimore City"
LAvehiclesNEI <- vehiclesNEI[vehiclesNEI$fips=="06037",]
LAvehiclesNEI$city <- "Los Angeles County"
# Combine the two subsets with city name into one data frame
bothNEI <- rbind(baltimoreVehiclesNEI,LAvehiclesNEI)
# Open a new graphics device in png
png("plot6.png",width=640,height=480,units="px")
# Plot the required graph
g <- ggplot(bothNEI, aes(x=factor(year), y=Emissions, fill=city)) +
geom_bar(stat="identity") +
facet_grid(.~city) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission")) +
labs(title=expression("PM"[2.5]*" Motor Vehicle Source Emissions in Baltimore & LA, 1999-2008"))
print(g)
dev.off()
# Combine the two subsets with city name into one data frame
bothNEI <- rbind(baltimoreVehiclesNEI,LAvehiclesNEI)
# Open a new graphics device in png
png("plot6.png",width=640,height=480,units="px")
# Plot the required graph
g <- ggplot(bothNEI, aes(x=factor(year), y=Emissions, fill=city)) +
geom_bar(aes(fill = year),stat="identity") +
facet_grid(.~city) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission")) +
labs(title=expression("Motor Vehicle Source Emissions in Baltimore & LA, 1999-2008"))
print(g)
dev.off()
# Read the data from the working directory
nei <- readRDS("summarySCC_PM25.rds")
scc <- readRDS("Source_Classification_Code.rds")
# Open a new graphics device in png
png(filename = "plot1.png", width = 640, height = 480, units = "px")
# Plot the required graph
with(nei, plot(unique(year),  tapply(Emissions, year, sum),
type = "l", lwd = 2,
xlab = "Year", ylab = expression("Total PM"[2.5]*" Emissions"),
main = "Total Emissions from 1998 to 2008"))
# Close the graphic device
dev.off()
# Read the data from the working directory
nei <- readRDS("summarySCC_PM25.rds")
scc <- readRDS("Source_Classification_Code.rds")
# Open a new graphics device in png
png(filename = "plot1.png", width = 640, height = 480, units = "px")
# Plot the required graph
with(nei, plot(unique(year),  tapply(Emissions, year, sum),
type = "l", lwd = 2,
xlab = "Year", ylab = expression("Total PM"[2.5]*" Emissions"),
main = "Total Emissions from 1998 to 2008"))
# Close the graphic device
dev.off()
# Load the required packages
library(ggplot2)
# Read the data from the working directory
nei <- readRDS("summarySCC_PM25.rds")
scc <- readRDS("Source_Classification_Code.rds")
# Open a new graphics device in png
png(filename = "plot3.png", width = 640, height = 480, units = "px")
# Subset the data for only the Baltimore City, Maryland
bcity  <- subset(nei, fips=="24510")
# Aggregate the subset data according to year and type and calculate their total sum
bcityTotalAggregated <- aggregate(Emissions ~ year + type, bcity, sum)
g <- ggplot(bcityTotalAggregated, aes(year, Emissions, color = type))
g <- g + geom_line(lwd = 1) +
xlab("Year") +
ylab(expression("Total PM"[2.5]*" Emissions")) +
ggtitle('Total Emissions in Baltimore City, Maryland from 1999 to 2008')
print(g)
# Close the graphic device
dev.off()
# Load the required packages
library(ggplot2)
# Read the data from the working directory
nei <- readRDS("summarySCC_PM25.rds")
scc <- readRDS("Source_Classification_Code.rds")
# Merge the two datasets
neiscc <- merge(nei, scc, by = "SCC")
neiscc <- transform(neiscc, year = factor(year))
# Fetch all NEIxSCC records with Short.Name (SCC) = Coal
coal  <- grepl("coal", neiscc$Short.Name, ignore.case=TRUE)
neiSccCoal <- neiscc[coal, ]
aggregatedTotalByYear <- aggregate(Emissions ~ year, neiSccCoal, sum)
# Open a new graphics device in png
png("plot4.png", width=640, height=480)
# Plot the required graph
g <- ggplot(aggregatedTotalByYear, aes(factor(year), Emissions))
g <- g + geom_bar(stat="identity") +
xlab("year") +
ylab(expression("Total PM"[2.5]*" Emissions")) +
ggtitle('Total Emissions from coal sources from 1999 to 2008')
print(g)
dev.off()
# Gather the subset of the NEI data which corresponds to vehicles
vehicles <- grepl("vehicle", neiscc$SCC.Level.Two, ignore.case=TRUE)
vehiclesNEI <- neiscc[vehicles,]
# Subset the vehicles NEI data to Baltimore's fip
baltimoreVehiclesNEI <- vehiclesNEI[vehiclesNEI$fips=="24510",]
aggregatedTotalByYear <- aggregate(Emissions ~ year, baltimoreVehiclesNEI, sum)
# Open a new graphics device in png
png("plot5.png",width=640,height=480,units="px")
# Plot the required graph
g <- ggplot(aggregatedTotalByYear,aes(year,Emissions))
g <- g + geom_bar(stat="identity", width = 0.5) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission")) +
labs(title = "Motor Vehicle Source Emissions in Baltimore from 1999-2008")
print(g)
dev.off()
# Gather the subset of the NEI data which corresponds to vehicles
vehicles <- grepl("vehicle", neiscc$SCC.Level.Two, ignore.case=TRUE)
vehiclesNEI <- neiscc[vehicles,]
# Subset the vehicles NEI data to Baltimore's & LA's fip
baltimoreVehiclesNEI <- vehiclesNEI[vehiclesNEI$fips=="24510",]
baltimoreVehiclesNEI$city <- "Baltimore City"
LAvehiclesNEI <- vehiclesNEI[vehiclesNEI$fips=="06037",]
LAvehiclesNEI$city <- "Los Angeles County"
# Combine the two subsets with city name into one data frame
bothNEI <- rbind(baltimoreVehiclesNEI,LAvehiclesNEI)
# Open a new graphics device in png
png("plot6.png",width=640,height=480,units="px")
# Plot the required graph
g <- ggplot(bothNEI, aes(x=factor(year), y=Emissions, fill=city)) +
geom_bar(stat="identity") +
facet_grid(.~city) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission")) +
labs(title=expression("Motor Vehicle Source Emissions in Baltimore & LA, 1999-2008"))
print(g)
dev.off()
# Fetch all NEIxSCC records with Short.Name (SCC) = Coal
coal  <- grepl("coal", neiscc$Short.Name, ignore.case=TRUE)
neiSccCoal <- neiscc[coal, ]
aggregatedTotalByYear <- aggregate(Emissions ~ year, neiSccCoal, sum)
# Open a new graphics device in png
png("plot4.png", width=640, height=480)
# Plot the required graph
g <- ggplot(aggregatedTotalByYear, aes(factor(year), Emissions))
g <- g + geom_bar(stat="identity", width = 0.5) +
xlab("year") +
ylab(expression("Total PM"[2.5]*" Emissions")) +
ggtitle('Total Emissions from coal sources from 1999 to 2008')
print(g)
dev.off()
# Fetch all NEIxSCC records with Short.Name (SCC) = Coal
coal  <- grepl("coal", neiscc$Short.Name, ignore.case=TRUE)
neiSccCoal <- neiscc[coal, ]
aggregatedTotalByYear <- aggregate(Emissions ~ year, neiSccCoal, sum)
# Open a new graphics device in png
png("plot4.png", width=640, height=480)
# Plot the required graph
g <- ggplot(aggregatedTotalByYear, aes(factor(year), Emissions))
g <- g + geom_bar(stat="identity", width = 0.5) +
xlab("year") +
ylab(expression("Total PM"[2.5]*" Emissions")) +
ggtitle('Total Emissions from coal sources from 1999 to 2008')
print(g)
dev.off()
